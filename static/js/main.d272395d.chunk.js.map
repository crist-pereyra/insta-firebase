{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d272395d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n // Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDe0EyDRSWXM5_g74WGU840xYsrTWo0v3A\",\n    authDomain: \"cristpreyra-firegram.firebaseapp.com\",\n    projectId: \"cristpreyra-firegram\",\n    storageBucket: \"cristpreyra-firegram.appspot.com\",\n    messagingSenderId: \"629172599713\",\n    appId: \"1:629172599713:web:c1bfefdb4bad882e98e9e0\"\n};\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n        //references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async() => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp();\n            collectionRef.add({ url, createdAt });\n            setUrl(url);\n        })\n    }, [file]);\n    return { progress, url, error }\n}\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion'\n\nconst ProgressBar = ({ file, setFile}) => {\n    const { url, progress} = useStorage(file);\n    console.log(progress, url);\n\n    useEffect(() => {\n        if(url) {\n            setFile(null);\n        }\n    }, [url, setFile]);\n    return (\n        <motion.div className=\"progress-bar\"\n            initial={{width: 0}}\n            animate={{ width: progress + '%'}}\n        ></motion.div>\n    )\n}\nexport default ProgressBar;","import React, {useState} from 'react';\nimport ProgressBar from './ProgressBar';\nconst UploadForm = () => {\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n    //const [uploading, setUploading] = useState(false);\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n\n        if(selected && types.includes(selected.type)){\n            setFile(selected);\n            setError('');\n        }\n        else{\n            setFile(null);\n            setError('File type not supported, select an image');\n        }\n    }\n    return(\n        <form>\n            <label>\n                <input type=\"file\" onChange={changeHandler} />\n                <span>+</span>\n            </label>\n            <div className=\"output\">\n                {error && <div className=\"error\">{error}</div>}\n                {file && <div>{ file.name }</div>}\n                { file && <ProgressBar file={file} setFile={setFile}/>}\n            </div>\n        </form>\n    )\n}\nexport default UploadForm;","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\nconst [docs, setDocs] = useState([]);\n\nuseEffect(() => {\n    const unsub = projectFirestore.collection(collection)\n    .orderBy('createdAt', 'desc')\n    .onSnapshot(snap => {\n        let documents = [];\n        snap.forEach(doc => {\n        documents.push({...doc.data(), id: doc.id});\n        });\n        setDocs(documents);\n    });\n\n    return () => unsub();\n}, [collection]);\n\nreturn { docs };\n}\n\nexport default useFirestore;\n","import React from 'react';\nimport  useFirestore  from '../hooks/useFirestore';\nimport {motion} from 'framer-motion'\n\nconst ImageGrid = ({setSelectedImg}) => {\n    const { docs } = useFirestore('images');\n    console.log(docs);\n    return (\n        <div className=\"img-grid\">\n            {docs && docs.map(doc => (\n                <motion.div className=\"img-wrap\" key={doc.id}\n                    layout\n                    whileHover={{opacity: 1}}s\n                    onClick={() => setSelectedImg(doc.url)}>\n                    <motion.img src={doc.url} alt=\"uploaded pic\"\n                    initial={{opacity: 0}}\n                    animate={{opacity: 1}}\n                    transition={{delay: 1}}/>\n                </motion.div>\n            ))}\n        </div>\n    )\n}\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({selectedImg, setSelectedImg}) => {\n\n    const handleClick = (e) => {\n        if(e.target.classList.contains('backdrop')){\n            setSelectedImg(null);\n        }\n    }\n    return(\n        <motion.div className=\"backdrop\" onClick={handleClick}\n            initial= {{opacity: 0}}\n            animate = {{opacity: 1}}\n        >\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\n                initial= {{y: \"-100vh\"}}\n                animate = {{y: 0}}\n            />\n        </motion.div>\n    )\n}\nexport default Modal;\n","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid setSelectedImg={setSelectedImg}/>\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}